* {
  box-sizing: border-box;
  margin: 0;
  padding: 0;
}

body {
  font-family: sans-serif;
}

.body {
  background-color: #f4f4f4;
  display: flex;
  flex-direction: column;
  min-height: 100dvh;
}

.main {
  flex-grow: 1;
  position: relative;
}

.scene {
  width: 100dvw;
  perspective: 100dvh;
  display: flex;
  justify-content: center;
  padding-block: 25dvh;
}

@keyframes rotate {
  from {
    transform: rotateX(45deg) rotateY(45deg);
  }
  to {
    transform: rotateX(405deg) rotateY(405deg);
  }
}

.regular-tetrahedron {
  --length: 50dvh;
  --width: var(--length);
  --height: calc(sin(60deg) * var(--length));
  width: var(--width);
  height: calc(var(--height));
  position: relative;
  transform-style: preserve-3d;
  animation: rotate 5s infinite linear;

  .face {
    transform-origin: bottom center;
    display: grid;
    place-items: center;
    position: absolute;
    width: var(--length);
    height: calc(var(--height));
    background-color: #fff;
    border: 1px solid #ddd;
    font-size: 3rem;
    clip-path: polygon(0 100%, 100% 100%, 50% 0);
  }

  .face-1 {
    transform: translateZ(calc(var(--height) / 2))
      rotateX(calc(90deg - acos(calc(1 / 3))));
  }

  .face-2 {
    transform: translateX(calc(var(--width) / 4)) rotateY(120deg)
      rotateX(calc(90deg - acos(calc(1 / 3))));
  }

  .face-3 {
    transform: translateX(calc(var(--width) / 4 * -1)) rotateY(240deg)
      rotateX(calc(90deg - acos(calc(1 / 3))));
  }

  .face-4 {
    transform: rotateX(90deg) rotateY(180deg) translateY(calc(var(--height) / 2));
  }
}
